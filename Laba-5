# -*- coding: utf-8 -*-
import unittest


class driver:
    def __init__(self, name, types):
        self.name = name
        self.types = types

    def __repr__(self):
        return "%s, %r" % (self.name, self.types)

    def __str__(self):
        return "Имя: %s, Тип прав: %r" % (self.name, self.types)

    def test(self):
        return str(self)

    def __call__(self, *args):
        return print("был вызван CALL:%s , %r" % (self.name, self.types))

    def __lt__(self, other):
        return self.name < other.name
    def __eq__(self, other):
        return self.name == other.name and self.types == other.types


def SortDriver(slist):
    slisttemp=slist
    for i in range(len(slisttemp) - 1):
        for j in range(len(slisttemp) - i - 1):
            if (slisttemp[j + 1] < slisttemp[j]):
                slisttemp[j], slisttemp[j + 1] = slisttemp[j + 1], slisttemp[j]
    return slisttemp


class SortMyListTest(unittest.TestCase):
    def test_normal(self):
        res = SortDriver([driver('Шарифханов Артем Адикович', 'Категория В'),
                            driver('Иванов Иван Иванович', 'Категория В,С,D'),
                            driver('Рустамханова Гульшат Ильдаровна', 'Категория A,B,C,D,E'),
                            driver('Фархад Магдабек аглы Масулович', 'Категория В,C')])
        self.assertEqual(res, [driver('Шарифханов Артем Адикович', 'Категория В'),
                                driver('Фархад Магдабек аглы Масулович', 'Категория В,C'),
                                driver('Рустамханова Гульшат Ильдаровна', 'Категория A,B,C,D,E'),
                                driver('Иванов Иван Иванович', 'Категория В,С,D')])

    def test_single(self):
        res = SortDriver([driver('Шарифханов Артем Адикович', 'Категория В')])
        self.assertEqual(res, [driver('Шарифханов Артем Адикович', 'Категория В')])


if __name__ == '__main__':
    unittest.main()
